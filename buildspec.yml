version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      # - docker-username=$(aws secretsmanager get-secret-value --secret-id app/docker --query 'SecretString' --output text | jq -r .docker-username)
      # - docker-password=$(aws secretsmanager get-secret-value --secret-id app/docker --query 'SecretString' --output text | jq -r .docker-password)
      - echo $docker-password | docker login -u $docker-username --password-stdin
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 992382777416.dkr.ecr.us-east-2.amazonaws.com
      - REPOSITORY_URI=992382777416.dkr.ecr.us-east-2.amazonaws.com/mjy-app
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean package -DskipTests
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:app-deploy .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:app-deploy
      - echo Writing image definitions file...
      # Give your container name
      - DOCKER_CONTAINER_NAME=mjy-app
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/spring-test-0.0.1-SNAPSHOT.jar