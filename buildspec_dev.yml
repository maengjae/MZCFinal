version: 0.2

env:
  variables:
    AWS_REGION: "us-east-2"
    REPOSITORY_URI: "lygerin14/test"
    IMAGE_TAG: "app-deploy"
    TASK_FAMILY: "app-task-family"

phases:
  pre_build:
    commands:
      # - echo Logging in to Amazon ECR....
      # - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 992382777416.dkr.ecr.us-east-2.amazonaws.com
      # - REPOSITORY_URI=992382777416.dkr.ecr.us-east-2.amazonaws.com/mjy-app
      - echo Logging into docker
      - secret=$(aws secretsmanager get-secret-value --secret-id /CodeBuild/docker --query SecretString --output text)
      - docker_username=$(echo "$secret" | jq -r '.username')
      - docker_password=$(echo "$secret" | jq -r '.password')
      - echo $docker_password | docker login -u $docker_username --password-stdin
      - INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=mjy-dev-instance" --query "Reservations[0].Instances[0].InstanceId" --output text)
      - EC2_INSTANCE_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
      - ssh -o StrictHostKeyChecking=no ec2-user@$EC2_INSTANCE_IP "echo Logged in"

  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean package -DskipTests
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:$IMAGE_TAG

      - echo Deploying to EC2 instance
      - ssh ec2-user@$EC2_INSTANCE_IP "docker pull $REPOSITORY_URI:$IMAGE_TAG"
      - ssh ec2-user@$EC2_INSTANCE_IP "docker stop $REPOSITORY_URI:$IMAGE_TAG || true"
      - ssh ec2-user@$EC2_INSTANCE_IP "docker rm $REPOSITORY_URI:$IMAGE_TAG || true"
      - ssh ec2-user@$EC2_INSTANCE_IP "docker run -d --name $REPOSITORY_URI:$IMAGE_TAG -p 8080:8080 $REPOSITORY_URI:$IMAGE_TAG"